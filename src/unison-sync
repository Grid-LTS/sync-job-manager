#!/bin/bash

action=$1
shift
force=$1
shift
ssh_login=$1
shift
local_path=$1
shift
server_path=$1
shift
profile=$1


if [ -z "$DIR" ]; then
  SOURCE="${BASH_SOURCE[0]}"
  while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  done
  DIR=$(dirname "$( cd -P "$( dirname "$SOURCE" )" && pwd )")
fi

if [ -z "$confdir" ]; then
  export confdir="${HOME}/.sync-conf"
fi

local_path="${local_path/#\~/$HOME}"
mkdir ~/.unison &> /dev/null
base=$(basename $local_path)


if [ -z "$profile" ]; then
  #if no unison profile chose, use default profile
  profile=sjm_default
fi

if [[ "$profile" != *\.prf ]]; then
  # get profile file name by appending suffix
  template_profile_file="$profile.prf"
  concrete_profile_file="${base}_$profile.prf"
else
  template_profile_file=$profile
  concrete_profile_file=$template_profile_file
fi
profile=${concrete_profile_file/%\.prf}


template_dir=unison-templates
if [ -f $DIR/$template_dir/$template_profile_file ]; then
  template_path=$DIR/$template_dir/$template_profile_file
else
  # DEBUG echo "${confdir}/${template_dir}/${template_profile_file}"
  if [ -f $confdir/$template_dir/$template_profile_file ]; then
    template_path=$confdir/$template_dir/$template_profile_file
  else
    echo "Unison template file ${template_profile_file} cannot be found."
    exit 1
  fi
fi

remote_path="$server_path"

#create directories, locally and remotely
if [ ! -d "$local_path" ]; then
  mkdir -p "$local_path"
fi
echo "unison sync ${local_path}"

#server_path must contain ssh login
server_path_prefix="ssh://${ssh_login}/"
if [ -n "$ssh_login" ] && [[ "$server_path" == "$server_path_prefix"* ]]; then
    remote_path=${server_path#"$server_path_prefix"}
     # create path on remote machine for syncing
    echo "Create server directory: $remote_path"
    ssh $ssh_login "mkdir -p ${remote_path}"
  else
    if [[ ! "$remote_path" == ssh* ]]; then
      mkdir -p "${remote_path}"
    fi
    server_path_prefix=""
fi

echo "server path: ${server_path}"
# prepare profile for the unison sync
# copy the right profile template and replace the parameters

if [ ! -f  ~/.unison/$concrete_profile_file ]; then
  sed -e "s|@local_path@|${local_path}|g" -e "s|@server_path@|${server_path}|g" $template_path >  ~/.unison/$concrete_profile_file
fi
# finally sync files with the profile

if [ $force = 1 ]; then
  if [ $action = 'push' ];  then
    unison $profile -force  "$local_path"
    echo "run: unison $profile -force  ${local_path}"
  fi
  if [ $action = 'pull' ]; then
    unison $profile -force  "$server_path"
    echo "run: unison $profile -force  $server_path"
  fi
else
  # do not ignore archive
  # they ensure that files are properly checked if updated
  unison -auto $profile
  echo "run: unison -auto $profile"
fi


# clean up
#rm ~/.unison/$template_profile_file
echo -e "\n"
